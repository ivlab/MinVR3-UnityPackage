{
    "name": "edu.umn.cs.ivlab.minvr3",
    "displayName": "MinVR3",
    "description": "The 3rd incarnation of the MinVR library, this time centered  on Unity.",
    "version": "0.1.0",
    "unity": "2020.1",
    "author": { "name": "IVLab", "email": "ivlab-admin@umn.edu", "url": "https://ivlab.cs.umn.edu" },
    "documentationUrl": "https://pages.github.umn.edu/ivlab-cs/MinVR3-UnityPackage",
    "changelogUrl": "https://pages.github.umn.edu/ivlab-cs/MinVR3-UnityPackage/manual/changelog.html",
    "licensesUrl": "https://pages.github.umn.edu/ivlab-cs/MinVR3-UnityPackage/manual/license.html",
    "hideInEditor": "false",
    "samples": [
        {
            "displayName": "CavePainting-Lite",
            "description": "Simple 3D painting application with a bimanual 3DUI for painting; translating, rotating, and scaling the artwork; and scaling the brush.  Demonstrates the use of a ProximityEvent to overload the meaning of a button when holding both hands close together, like in the original CavePainting software.",
            "path": "Samples~/CavePainting-Lite"
        },
        {
            "displayName": "ObjectManipulation",
            "description": "Demonstrates bimanual manipulation of both the object and the scene using something like the classic SmartScene 3DUI.",
            "path": "Samples~/ObjectManipulation"
        },
        {
            "displayName": "SailingMapNav",
            "description": "Demonstrates a ClipboardVR config, including a map-based, wim-style navigation technique developed in Jung Nam's forestry data vis project; applied here to the idea of sailing around in a lagoon of islands.",
            "path": "Samples~/SailingMapNav"
        },
        {
            "displayName": "ShadowTouch",
            "description": "Divides the display into two windows that are intended to span two screens arranged in a L-shape, with a horizontal touch table as one display and a vertical stereoscopic window for the other.  Demonstrates the ShadowWIM technique, which is a precursor to the SliceWIM and Interactive SliceWIM user interfaces developed in Dane Coffey's dissertation work.",
            "path": "Samples~/ShadowTouch"
        },
        {
            "displayName": "ClusterTest",
            "description": "The simplest example of MinVR3's cluster mode support.  This runs two instances of the same app in two desktop windows (no VR required).  One app acts as the cluster server; on acts as a client.  They communicate with each other over a TCP connection, but the sample is configured for both apps to run on the same machine to keep it simple.  This demonstrates how both rendering and input events are synchronized at a per-frame level in cluster mode.  You will notice that moving the mouse in one app to move the 3D cursors around also moves them in the same way in the other app.  This is because MinVR3 synchronizes all VREvents across all nodes at the beginning of each frame.  MinVR3 also synchronizes the graphics rendering swapbuffers calls, meaning after each frame is rendered offscreen and just before it is actually displayed on the screen, each node pauses and waits for a signal that all other nodes are also done with rendering.  When every node is ready, they all swap to displaying the next frame at the same time.  This is important for synchronized rendering on tiled displays.",
            "path": "Samples~/ClusterTest"
        },
        {
            "displayName": "TcpConnectionTest",
            "description": "A simple example of using VREventConnections to share some VREvents generated in one MinVR app with other MinVR apps.  Shows how one VR user can be the 'driver', in control of an application, and other users running their own instances of the app can receive input from the 'driver's' hands.",
            "path": "Samples~/TcpConnectionTest"
        },
        {
            "displayName": "UMNCaveCalibration",
            "description": "A test app to ensure all parts of the UMN CAVE are working correctly -- tracking, button presses, and sound",
            "path": "Samples~/UMNCaveCalibration"
        }
    ]
}
